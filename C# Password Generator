using System;
using System.Text;

class randSamp
{
    static void Main(string[] args)
    {
        // Generate a random number.
        Random random = new Random();
        // Generate random integer.
        int num = random.Next();

        // Select a random integer less than 100.
        int randLessThan100 = random.Next(100);
        Console.WriteLine(randLessThan100);

        // Select a random integer between 100 and 500.
        int rand100to500 = random.Next(100, 500);
        Console.WriteLine(rand100to500);

        // Methods to generate a random number.
        randNumGen generator = new randNumGen();
        int rand = generator.RandomNumber(5, 100);
        Console.WriteLine($"The random number between 5 and 100 is {rand}");

        string str = generator.RandomString(10, false);
        Console.WriteLine($"Random string of 10 chars is {str}");

        string pass = generator.RandomPassword();
        Console.WriteLine($"Random password {pass}");

        Console.ReadKey();
    }
}

public class randNumGen
{
    // Select a random integer between two.
    public int RandomNumber(int min, int max)
    {
        Random random = new Random();
        return random.Next(min, max);
    }

// Generate a random string with a specific size and specific case.
// If second parameter is true, the return string is lowercase
public string RandomString(int size, bool lowerCase)
{
    StringBuilder builder = new StringBuilder();
    Random random = new Random();
    char ch;
    for (int i = 0; i < size; i++)
    {
        ch = Convert.ToChar(Convert.ToInt32(Math.Floor(26 * random.NextDouble() + 65)));
        builder.Append(ch);
    }
    if (lowerCase)
        return builder.ToString().ToLower();
    return builder.ToString();
}

    // Generate a random password with a specific length.
    public string RandomPassword(int size = 0)
    {
        StringBuilder builder = new StringBuilder();
        builder.Append(RandomString(4, true));
        builder.Append(RandomNumber(1000, 9999));
        builder.Append(RandomString(2, false));
        return builder.ToString();
    }
}